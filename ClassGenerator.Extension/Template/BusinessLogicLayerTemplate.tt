<#@ template language="C#" #>
<#@ assembly name="W:\Lib\Appendesk.dll" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Data" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ parameter type="System.String" name="Namespace" #>
<#@ parameter type="System.String" name="DtoNamespace" #>
<#@ parameter type="System.String" name="DtoClassName" #>
<#@ parameter type="System.String" name="DtoParameterName" #>
<#@ parameter type="System.String" name="DalNamespace" #>
<#@ parameter type="System.String" name="DalClassName" #>
<#@ parameter type="System.String" name="DalParameterName" #>
<#@ parameter type="System.String" name="SchemaName" #>
<#@ parameter type="System.String" name="ClassName" #>
<#@ parameter type="System.Collections.Generic.List<Model.DbColumn>" name="DbColumns" #>
<#@ import namespace="System.Collections.Generic" #>
using System;
using System.Collections.Generic;
using Appendesk;
using <#=DtoNamespace #>;
using <#=DalNamespace #>;

namespace <#=Namespace #>
{
    public class <#=ClassName #> : BusinessLayer
    {
        private readonly <#=DalClassName #> <#=DalParameterName #>;

        public <#=ClassName #>()
        {
            <#=DalParameterName #> = new <#=DalClassName #>();
        }

        public <#=ClassName #>(string connectionName)
        {
            <#=DalParameterName #> = new <#=DalClassName #>(connectionName);
        }

        public <#=ClassName #>(DataLayer dataLayer)
        {
            <#=DalParameterName #> = new <#=DalClassName #>(dataLayer);
        }

        public List<<#=DtoClassName #>> GetByParameter(List<QueryParameter> queryParameters)
        {
            try
            {
                return <#=DalParameterName #>.GetByParameter(queryParameters);
            }
            catch (Exception)
            {
                <#=DalParameterName #>.TransactionRollback();
                throw;
            }
        }

        public <#=DtoClassName #> Insert(<#=DtoClassName #> <#=DtoParameterName #>)
        {
            try
            {
                <#=DalParameterName #>.TransactionBegin();
                <#=DalParameterName #>.Insert(<#=DtoParameterName #>);

                <#=DalParameterName #>.TransactionCommit();
                <#=DtoParameterName #>.Response = new Response(0, "Kaydedildi", ResponseLevel.Success);
                return <#=DtoParameterName #>;
            }
            catch (Exception)
            {
                <#=DalParameterName #>.TransactionRollback();
                throw;
            }
        }

        public <#=DtoClassName #> Update(<#=DtoClassName #> <#=DtoParameterName #>)
        {
            try
            {
                <#=DalParameterName #>.TransactionBegin();
                <#=DalParameterName #>.Update(<#=DtoParameterName #>);

                <#=DalParameterName #>.TransactionCommit();
                <#=DtoParameterName #>.Response = new Response(0, "Güncellendi", ResponseLevel.Success);
                return <#=DtoParameterName #>;
            }
            catch (Exception)
            {
                <#=DalParameterName #>.TransactionRollback();
                throw;
            }
        }

        public <#=DtoClassName #> Delete(<#=DtoClassName #> <#=DtoParameterName #>)
        {
            try
            {
                <#=DalParameterName #>.TransactionBegin();
                <#=DalParameterName #>.Delete(<#=DtoParameterName #>);

                <#=DalParameterName #>.TransactionCommit();
                <#=DtoParameterName #>.Response = new Response(0, "Silindi", ResponseLevel.Success);
                return <#=DtoParameterName #>;
            }
            catch (Exception)
            {
                <#=DalParameterName #>.TransactionRollback();
                throw;
            }
        }
    }
}